// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kukin.Data;

namespace kukin.Migrations
{
    [DbContext(typeof(KukinDbContext))]
    [Migration("20200909051609_AddingSeedToTestIngredient")]
    partial class AddingSeedToTestIngredient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kukin.Data.Entities.Ingredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("0375633c-1e53-4309-ba08-e3f8517c1589"),
                            Active = true,
                            CreatedAt = new DateTime(2020, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "modelBuilder.seed",
                            Name = "Pollo",
                            UpdatedAt = new DateTime(2020, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "modelBuilder.seed"
                        });
                });

            modelBuilder.Entity("kukin.Data.Entities.Recipe", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = new Guid("d5f36d82-e0ac-49be-aa46-44acc8d1dec3"),
                            Active = true,
                            CreatedAt = new DateTime(2020, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "modelBuilder.seed",
                            Name = "Pollo al curry",
                            UpdatedAt = new DateTime(2020, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "modelBuilder.seed"
                        });
                });

            modelBuilder.Entity("kukin.Data.Entities.RecipeIngredient", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredient");

                    b.HasData(
                        new
                        {
                            IngredientId = new Guid("0375633c-1e53-4309-ba08-e3f8517c1589"),
                            RecipeId = new Guid("d5f36d82-e0ac-49be-aa46-44acc8d1dec3")
                        });
                });

            modelBuilder.Entity("kukin.Data.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("kukin.Data.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientRecipe")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kukin.Data.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredient")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
